
###################
# Install Docker  #
###################
function add_users_to_docker_group() {
  # Get a list of all manually created users
  users=$(awk -F':' '$3 >= 1000 && $1 != "nobody" { print $1 }' /etc/passwd)
  # Loop through the list of users
  for user in $users; do
    # Add the user to the "docker" group
    sudo usermod -aG docker $user
  done
}

install_docker() {
    cd /tmp/ && curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo groupadd docker
    add_users_to_docker_group
    sudo systemctl enable docker
    sudo systemctl restart docker
    echo ""
    echo "Reboot required so, kindly reboot system"
}

install_docker_compose() {
	sudo curl -L "https://github.com/docker/compose/releases/download/v2.26.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
	sudo chmod +x /usr/local/bin/docker-compose
	cp -a /usr/local/bin/docker-compose /usr/bin/docker-compose
	docker-compose -v
    echo ""
    echo "Docker-compose installed!..."
}


check_container_health() {
    local container_name=$1
    local max_retry=30
    local retry=0
    local health_status="unhealthy"
    info "Waiting for $container_name to be healthy"
    while [[ "$health_status" == "unhealthy" && $retry -lt $max_retry ]]; do
        health_status=$(docker inspect --format='{{.State.Health.Status}}' $container_name 2>/dev/null || info 'unhealthy')
        sleep 5
        retry=$((retry+1))
    done
    if [[ "$health_status" == "unhealthy" ]]; then
        abort "Container $container_name is unhealthy"
    fi
    info "Container $container_name is healthy"
}

