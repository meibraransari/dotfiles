#!/bin/bash
#set -xv

NOCOLOR='\e[0m'
BOLD='\e[1m'
BLINK='\e[5m'
Blue='\e[44m'
GREEN='\e[0;32m'

# clear >$(tty)
clear >/dev/tty

echo -e " ${GREEN}${BOLD}#=========================================================#${NOCOLOR}"
echo -e " ${GREEN}${BOLD}#        Dotfiles installation is in progress....         #${NOCOLOR}"
echo -e " ${GREEN}${BOLD}#=========================================================#${NOCOLOR}"
echo '
 ____        _    __ _ _           
|  _ \  ___ | |_ / _(_) | ___  ___ 
| | | |/ _ \| __| |_| | |/ _ \/ __|
| |_| | (_) | |_|  _| | |  __/\__ \
|____/ \___/ \__|_| |_|_|\___||___/
'

# Function to ask yes/no questions
ask_yes_no() {
  while true; do
    read -p "$1 Do you want to install Dotfiles? Please answer(yes/no) | [default: yes]: " yn
    case $yn in
    [Yy]*) return 0 ;;
    [Nn]*) return 1 ;;
    "") return 0 ;; # Default to yes if Enter is pressed
    *) echo "Do you want to install Dotfiles? Please answer yes or no." ;;
    esac
  done
}
ask_yes_no

########## ---------- You must not run this as root ---------- ##########

if [ "$(id -u)" = 0 ]; then
    echo "This script MUST NOT be run as root user."
    exit 1
fi

# Update package lists
echo "Updating package lists..."
sudo apt-get update -y

# Function to add dependency if missing
install_if_missing() {
    if ! command -v "$1" >/dev/null; then
        echo "Installing $1..."
        sudo apt-get -y install "$1"
    else
        echo "$1 is already installed"
    fi
}
# Check and add dependencies
install_if_missing grc
install_if_missing git
install_if_missing zsh
install_if_missing wget
install_if_missing curl
install_if_missing jq
install_if_missing tmux
install_if_missing net-tools

function install_dotfiles {
# Set current dir
current_dir=$(pwd)
# Check if the directory is empty (no files or directories inside)
dotfiles_dir="$HOME/bin/dotfiles"
# Check if the directory exists
if [ ! -d "$dotfiles_dir" ]; then
    # Directory does not exist, create it and clone the repository
    mkdir -p "$dotfiles_dir"
    git clone https://github.com/meibraransari/dotfiles.git "$dotfiles_dir" &> /dev/null
else
    echo "Dotfiles is already installed."
    echo ""
    echo "Skipping installation and updating to the latest version."
    echo ""
    # Update dot files
    #cd ~/bin/dotfiles && git pull && cd "$current_dir" && source ~/.bash_profile
    cd ~/bin/dotfiles && git pull && cd "$current_dir" > /dev/null && source ~/.bash_profile
    exit 0
fi
}
install_dotfiles

# Clean files
sed -i "/\. ~\/bin\/dotfiles\/bashrc/d" ~/.bashrc

# Check if the line '. ~/bin/dotfiles/bashrc' exists in ~/.bashrc, if not, append it
if ! grep -qxF '. ~/bin/dotfiles/bashrc' ~/.bashrc; then
    echo '. ~/bin/dotfiles/bashrc 2>/dev/null' >> ~/.bashrc
fi

# Check if the line '[ -f ~/.bashrc ] && source ~/.bashrc' exists in ~/.bash_profile, if not, append it
if ! grep -qxF '[ -f ~/.bashrc ] && source ~/.bashrc' ~/.bash_profile; then
    echo '[ -f ~/.bashrc ] && source ~/.bashrc' >> ~/.bash_profile
fi

# Add tmux in ~/.bashrc
grep -qxF 'command -v tmux >/dev/null 2>&1 && [ -z "$TMUX" ] && exec tmux' ~/.bashrc || echo 'command -v tmux >/dev/null 2>&1 && [ -z "$TMUX" ] && exec tmux' >> ~/.bashrc

# Source ~/.bash_profile to apply changes
# source ~/.bash_profile >/dev/null 2>&1

# Copy Tmux Config file
cp -a ~/bin/dotfiles/config/tmux/.tmux.conf $HOME/.tmux.conf

# Copy Vim Config file
cp -a ~/bin/dotfiles/config/vim/vimrc $HOME/.vimrc

# Copy Vim Config file
cp -a ~/bin/dotfiles/config/zsh/.fzf.zsh $HOME/.fzf.zsh

# Change directory
cd "$current_dir" &> /dev/null

# Install Oh My Zsh non-interactively
echo "Installing Oh My Zsh..."
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended

# Install zsh-autosuggestions and zsh-syntax-highlighting plugins
echo "Installing zsh plugins..."
ZSH_CUSTOM=${ZSH_CUSTOM:-~/.oh-my-zsh/custom}
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM}/plugins/zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-syntax-highlighting ${ZSH_CUSTOM}/plugins/zsh-syntax-highlighting
git clone --depth 1 -- https://github.com/marlonrichert/zsh-autocomplete.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autocomplete
git clone --depth 1 https://github.com/unixorn/fzf-zsh-plugin.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/fzf-zsh-plugin
git clone --depth 1 https://github.com/junegunn/fzf.git $HOME/.fzf
git clone https://github.com/Aloxaf/fzf-tab ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/fzf-tab
sudo bash ~/.fzf/install --all

# Enable plugins and change theme in ~/.zshrc
echo "Configuring zsh..."
sed -i 's/^plugins=(.*)/plugins=(git cp colored-man-pages colorize zsh-autosuggestions zsh-syntax-highlighting zsh-autocomplete fzf-zsh-plugin fzf-tab)/' ~/.zshrc
sed -i 's/^ZSH_THEME="[^"]*"/ZSH_THEME="agnoster"/' ~/.zshrc

# Set Dotfiles (if applicable)
echo '. ~/bin/dotfiles/bashrc 2>/dev/null' >> ~/.zshrc

# Change default shell to zsh
echo "Changing default shell to zsh..."
sudo usermod --shell $(which zsh) $USER

# Inform user to switch to zsh
clear
echo ""
echo ""
echo -e " ${GREEN}${BOLD}-:Thanks for using Dotfiles:-		${NOCOLOR}"
echo ""
echo ""
echo -e " ${Blue}${BLINK}${BOLD}   Installation done, To complete the setup, you need to log out and log back in, or restart your terminal...${NOCOLOR}"
